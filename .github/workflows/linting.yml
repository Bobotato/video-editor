name: Linting

on:
  push:
    pull_request:
      branches:

  workflow_dispatch:

jobs:

  run-precommit-hooks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.4'

      - name: Install Poetry    
        uses: snok/install-poetry@v1    
        with:                  
          virtualenvs-create: true        
          virtualenvs-in-project: true    
          installer-parallel: true        
                                          
      - name: Install dependencies    
        run: poetry install --no-interaction --no-root    

      - name: Set up and run precommit checks
        uses: pre-commit/action@v2.0.3

  #  run-tests:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - name: Checkout repo
  #        uses: actions/checkout@v3
  #
  #      - name: Set up Python
  #        uses: actions/setup-python@v3
  #        with:
  #          python-version: '3.10.4'
  #
  #      - name: Install Poetry
  #        uses: snok/install-poetry@v1
  #        with: 
  #          virtualenvs-create: true
  #          virtualenvs-in-project: true
  #          installer-parallel: true
  #
  #      - name: Install dependencies
  #        run: poetry install --no-interaction --no-root
  #      
  #      - name: Run pytest
  #        run: |
  #          source .venv/bin/activate  
  #          pytest tests/ -v
  #
  #  check-code-coverage:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - name: Checkout repo
  #        uses: actions/checkout@v3
  #
  #      - name: Set up Python
  #        uses: actions/setup-python@v3
  #        with:
  #          python-version: '3.10.4'
  #
  #      - name: Install Poetry
  #        uses: snok/install-poetry@v1
  #        with:
  #          virtualenvs-create: true
  #          virtualenvs-in-project: true
  #          installer-parallel: true
  #
  #      - name: Install dependencies
  #        run: poetry install --no-interaction --no-root
  #
  #      - name: Generate code coverage xml
  #        run:  |
  #          source .venv/bin/activate
  #          pytest --cov=hilo --cov-branch tests/
  #          coverage xml
  #
  #      - name: Codecov upload
  #        uses: codecov/codecov-action@v3
  #        with:
  #          token: ${{ secrets.CODECOV }}
  #          fail_ci_if_error: true
  #          flags: pytest
  #          verbose: true
